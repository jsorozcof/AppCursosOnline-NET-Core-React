{"ast":null,"code":"import HttpCliente from '../Servicios/HttpCliente';\nexport const guardarCurso = async (curso, imagen) => {\n  const endPointCurso = '/cursos';\n  const promesaCurso = HttpCliente.post(endPointCurso, curso);\n\n  if (imagen) {\n    const endPointImagen = '/documento';\n    const promesaImagen = HttpCliente.post(endPointImagen, imagen);\n    return await Promise.all([promesaCurso, promesaImagen]);\n  } else {\n    return await Promise.all([promesaCurso]);\n  }\n};\nexport const paginacionCurso = paginador => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.post('/cursos/report', paginador).then(response => {\n      resolve(response);\n    });\n  });\n};","map":{"version":3,"sources":["C:/A_GitHub/AppCursosOnline-NET-Core-React/cursos-online-app/src/actions/CursoAction.js"],"names":["HttpCliente","guardarCurso","curso","imagen","endPointCurso","promesaCurso","post","endPointImagen","promesaImagen","Promise","all","paginacionCurso","paginador","resolve","eject","then","response"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAEjD,QAAMC,aAAa,GAAG,SAAtB;AACA,QAAMC,YAAY,GAAGL,WAAW,CAACM,IAAZ,CAAiBF,aAAjB,EAAgCF,KAAhC,CAArB;;AAEA,MAAGC,MAAH,EAAU;AACN,UAAMI,cAAc,GAAG,YAAvB;AACA,UAAMC,aAAa,GAAGR,WAAW,CAACM,IAAZ,CAAiBC,cAAjB,EAAiCJ,MAAjC,CAAtB;AACA,WAAQ,MAAMM,OAAO,CAACC,GAAR,CAAY,CAACL,YAAD,EAAeG,aAAf,CAAZ,CAAd;AAEH,GALD,MAKM;AACF,WAAO,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACL,YAAD,CAAZ,CAAb;AACH;AACJ,CAbM;AAeP,OAAO,MAAMM,eAAe,GAAIC,SAAD,IAAe;AAC1C,SAAO,IAAIH,OAAJ,CAAY,CAACI,OAAD,EAASC,KAAT,KAAmB;AAClCd,IAAAA,WAAW,CAACM,IAAZ,CAAiB,gBAAjB,EAAmCM,SAAnC,EAA8CG,IAA9C,CAAmDC,QAAQ,IAAI;AAC3DH,MAAAA,OAAO,CAACG,QAAD,CAAP;AACH,KAFD;AAGH,GAJM,CAAP;AAKH,CANM","sourcesContent":["import HttpCliente from '../Servicios/HttpCliente';\r\n\r\nexport const guardarCurso = async (curso, imagen) => {\r\n    \r\n    const endPointCurso = '/cursos';\r\n    const promesaCurso = HttpCliente.post(endPointCurso, curso);\r\n\r\n    if(imagen){\r\n        const endPointImagen = '/documento';\r\n        const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n        return  await Promise.all([promesaCurso, promesaImagen]);\r\n\r\n    }else {\r\n        return await Promise.all([promesaCurso]);\r\n    }\r\n};\r\n\r\nexport const paginacionCurso = (paginador) => {\r\n    return new Promise((resolve,eject) => {\r\n        HttpCliente.post('/cursos/report', paginador).then(response => {\r\n            resolve(response);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}