{"ast":null,"code":"import HttpCliente from'../Servicios/HttpCliente';import axios from'axios';var instancia=axios.create();instancia.CancelToken=axios.CancelToken;instancia.isCancel=axios.isCancel;export var registrarUsuario=function registrarUsuario(usuario){return new Promise(function(resolve,eject){instancia.post(\"/usuario/registrar\",usuario).then(function(response){resolve(response);});});};export var obtenerUsuarioActual=function obtenerUsuarioActual(dispatch){return new Promise(function(resolve,eject){HttpCliente.get(\"/usuario\").then(function(response){if(response.data&&response.data.imagenPerfil){var fotoPerfil=response.data.imagenPerfil;var nuevoFile='data:image/'+fotoPerfil.extension+';base64,'+fotoPerfil.data;response.data.imagenPerfil=nuevoFile;}dispatch({type:\"INICIAR_SESION\",sesion:response.data,autenticado:true});resolve(response);}).catch(function(error){console.log('error actualizar',error);resolve(error);});});};export var actualizarUsuario=function actualizarUsuario(usuario,dispatch){return new Promise(function(resolve,eject){HttpCliente.put('/usuario',usuario).then(function(response){if(response.data&&response.data.imagenPerfil){var fotoPerfil=response.data.imagenPerfil;var nuevoFile='data:image/'+fotoPerfil.extension+';base64,'+fotoPerfil.data;response.data.imagenPerfil=nuevoFile;}dispatch({type:'INICIAR_SESION',sesion:response.data,autenticado:true});resolve(response);}).catch(function(error){resolve(error.response);});});};export var loginUsuario=function loginUsuario(usuario,dispatch){return new Promise(function(resolve,eject){instancia.post(\"/usuario/login\",usuario).then(function(response){if(response.data&&response.data.imagenPerfil){var fotoPerfil=response.data.imagenPerfil;var nuevoFile=\"data:image/\"+fotoPerfil.extension+\";base64,\"+fotoPerfil.data;response.data.imagenPerfil=nuevoFile;}dispatch({type:\"INICIAR_SESION\",sesion:response.data,autenticado:true});resolve(response);}).catch(function(error){resolve(error.response);});});};","map":{"version":3,"sources":["C:/A_GitHub/AppCursosOnline-NET-Core-React/cursos-online-app/src/actions/UsuarioAction.js"],"names":["HttpCliente","axios","instancia","create","CancelToken","isCancel","registrarUsuario","usuario","Promise","resolve","eject","post","then","response","obtenerUsuarioActual","dispatch","get","data","imagenPerfil","fotoPerfil","nuevoFile","extension","type","sesion","autenticado","catch","error","console","log","actualizarUsuario","put","loginUsuario"],"mappings":"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","sourcesContent":["import HttpCliente from '../Servicios/HttpCliente';\r\nimport axios from 'axios';\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\n\r\nexport const registrarUsuario = (usuario) => {\r\n    return new Promise((resolve, eject) => {\r\n        instancia.post(\"/usuario/registrar\", usuario).then((response) => {\r\n            resolve(response);\r\n        });\r\n    });\r\n};\r\n\r\n\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.get(\"/usuario\")\r\n            .then((response) => {\r\n                if (response.data && response.data.imagenPerfil) {\r\n                    let fotoPerfil = response.data.imagenPerfil;\r\n                    const nuevoFile = 'data:image/' + fotoPerfil.extension + ';base64,' + fotoPerfil.data;\r\n                    response.data.imagenPerfil = nuevoFile;\r\n                }\r\n                dispatch({\r\n                    type: \"INICIAR_SESION\",\r\n                    sesion: response.data,\r\n                    autenticado: true,\r\n                });\r\n\r\n                resolve(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error actualizar', error);\r\n\r\n                resolve(error);\r\n            });\r\n    });\r\n};\r\n\r\n\r\nexport const actualizarUsuario = (usuario, dispatch) => {\r\n    return new Promise((resolve, eject) => {\r\n        HttpCliente.put('/usuario', usuario)\r\n            .then(response => {\r\n                if (response.data && response.data.imagenPerfil) {\r\n                    let fotoPerfil = response.data.imagenPerfil;\r\n                    const nuevoFile = 'data:image/' + fotoPerfil.extension + ';base64,' + fotoPerfil.data;\r\n                    response.data.imagenPerfil = nuevoFile;\r\n                }\r\n\r\n                dispatch({\r\n                    type: 'INICIAR_SESION',\r\n                    sesion: response.data,\r\n                    autenticado: true\r\n                });\r\n\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                resolve(error.response);\r\n            })\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const loginUsuario = (usuario, dispatch) => {\r\n    return new Promise((resolve, eject) => {\r\n        instancia.post(\"/usuario/login\", usuario).then(response => {\r\n            if(response.data && response.data.imagenPerfil){\r\n                let fotoPerfil = response.data.imagenPerfil;\r\n                const nuevoFile = \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n                response.data.imagenPerfil = nuevoFile;\r\n            }\r\n\r\n\r\n            dispatch({\r\n                type: \"INICIAR_SESION\",\r\n                sesion: response.data,\r\n                autenticado: true\r\n            })\r\n\r\n\r\n            resolve(response);\r\n        }).catch(error => {\r\n            resolve(error.response);\r\n        })\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}