{"ast":null,"code":"var _jsxFileName = \"C:\\\\A_GitHub\\\\AppCursosOnline-NET-Core-React\\\\cursos-online-app\\\\src\\\\componentes\\\\seguridad\\\\PerfilUsuario.js\";\nimport React, { useEffect, useState } from \"react\";\nimport style from \"../Tool/Style\";\nimport { Container, Grid, TextField, Typography, Button, Avatar } from \"@material-ui/core\";\nimport { actualizarUsuario, obtenerUsuarioActual } from \"../../actions/UsuarioAction\";\nimport { useStateValue } from \"../../contexto/store\";\nimport reactFoto from \"../../logo.svg\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ImageUploader from 'react-images-upload';\n\nconst PerfilUsuario = () => {\n  const [{\n    sesionUsuario\n  }, dispatch] = useStateValue();\n  const [usuario, setUsuario] = useState({\n    nombreCompleto: '',\n    email: '',\n    password: '',\n    confirmarPassword: '',\n    username: '',\n    foto: {\n      data: '',\n      nombre: '',\n      extension: ''\n    },\n    fotoUrl: ''\n  });\n\n  const ingresarValoresMemoria = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUsuario(anterior => ({ ...anterior,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    obtenerUsuarioActual(dispatch).then(response => {\n      console.log('Esta es la data del usuairo actual', response);\n      setUsuario(response.data);\n    });\n  }, []);\n\n  const guardarUsuario = e => {\n    e.preventDefault();\n    actualizarUsuario(usuario).then(response => {\n      if (response.status == 200) {\n        dispatch({\n          type: \"OPEN_SNACKBAR\",\n          openMensaje: {\n            open: true,\n            mensaje: \"Se guardaron exitosamente los camnbio en el perfil usuario\"\n          }\n        });\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\n      } else {\n        dispatch({\n          type: \"OPEN_SNACKBAR\",\n          openMensaje: {\n            open: true,\n            mensaje: \"Errores al intentar guardar en : \" + Object.keys(response.data.errors)\n          }\n        });\n      } //console.log('se actualizo el usuario', response);\n\n    });\n  };\n\n  const subirFoto = imagenes => {\n    const foto = imagenes[0];\n    const fotoUrl = URL.createObjectURL(foto);\n    setUsuario(anterior => ({ ...anterior,\n      foto: foto,\n      fotoUrl: fotoUrl\n    }));\n  };\n\n  const fotoKey = uuidv4();\n  return /*#__PURE__*/React.createElement(Container, {\n    componen: \"main\",\n    maxWidth: \"md\",\n    justity: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: style.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    style: style.avatar,\n    src: usuario.fotoUrl || reactFoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Perfil de Usuario\"), /*#__PURE__*/React.createElement(\"form\", {\n    style: style.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"nombreCompleto\",\n    value: usuario.nombreCompleto,\n    onChange: ingresarValoresMemoria,\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Ingrese nombre y apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    value: usuario.username,\n    onChange: ingresarValoresMemoria,\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Ingrese Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    value: usuario.email,\n    onChange: ingresarValoresMemoria,\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Ingrese email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    value: usuario.password,\n    onChange: ingresarValoresMemoria,\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Ingrese password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"confirmarPassword\",\n    value: usuario.confirmarPassword,\n    onChange: ingresarValoresMemoria,\n    type: \"password\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: \"Confirme password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploader, {\n    withIcon: false,\n    key: fotoKey,\n    single: true,\n    buttonText: \"Seleccione una imagen de perfil\",\n    onChange: subirFoto,\n    imgExtension: [\".jpg\", \"gif\", \".png\", \"jpeg\"],\n    maxFileSize: 5242880,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: guardarUsuario,\n    fullWidth: true,\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    style: style.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Guardar datos\"))))));\n};\n\nexport default PerfilUsuario;","map":{"version":3,"sources":["C:/A_GitHub/AppCursosOnline-NET-Core-React/cursos-online-app/src/componentes/seguridad/PerfilUsuario.js"],"names":["React","useEffect","useState","style","Container","Grid","TextField","Typography","Button","Avatar","actualizarUsuario","obtenerUsuarioActual","useStateValue","v4","uuidv4","ImageUploader","PerfilUsuario","sesionUsuario","dispatch","usuario","setUsuario","nombreCompleto","email","password","confirmarPassword","username","foto","data","nombre","extension","fotoUrl","ingresarValoresMemoria","e","name","value","target","anterior","then","response","console","log","guardarUsuario","preventDefault","status","type","openMensaje","open","mensaje","window","localStorage","setItem","token","Object","keys","errors","subirFoto","imagenes","URL","createObjectURL","fotoKey","paper","avatar","reactFoto","form","submit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport { Container, Grid, TextField, Typography, Button, Avatar } from \"@material-ui/core\";\r\nimport { actualizarUsuario, obtenerUsuarioActual } from \"../../actions/UsuarioAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport reactFoto from '../../logo.svg';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nconst PerfilUsuario = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto : '',\r\n    email: '',\r\n    password: '',\r\n    confirmarPassword: '',\r\n    username: '',\r\n    foto: {\r\n      data: '',\r\n      nombre: '',\r\n      extension: ''\r\n    },\r\n    fotoUrl: ''\r\n  })\r\n\r\n  const  ingresarValoresMemoria = e => {\r\n    const {name, value} = e.target;\r\n    setUsuario(anterior => ({\r\n      ...anterior,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    obtenerUsuarioActual(dispatch).then(response => {\r\n        console.log('Esta es la data del usuairo actual', response);\r\n        setUsuario(response.data);\r\n    });\r\n  }, [])\r\n  \r\n\r\n  const guardarUsuario = e => {\r\n    e.preventDefault();\r\n    actualizarUsuario(usuario).then(response => {\r\n      if(response.status == 200){\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Se guardaron exitosamente los camnbio en el perfil usuario\"\r\n          }\r\n        })\r\n\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n\r\n      }else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Errores al intentar guardar en : \" +  Object.keys(response.data.errors)\r\n          }\r\n        })\r\n      }\r\n      //console.log('se actualizo el usuario', response);\r\n\r\n    })\r\n  }\r\n\r\n  const subirFoto = imagenes => {\r\n    const foto = imagenes[0];\r\n    const fotoUrl = URL.createObjectURL(foto);\r\n\r\n    \r\n    setUsuario(anterior => ({\r\n      ...anterior,\r\n      foto: foto,\r\n      fotoUrl: fotoUrl\r\n    }))\r\n  }\r\n\r\n  const fotoKey = uuidv4();\r\n\r\n  return (\r\n    <Container componen=\"main\" maxWidth=\"md\" justity=\"center\">\r\n      <div style={style.paper}>\r\n        <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto}/>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de Usuario\r\n        </Typography>\r\n    \r\n\r\n      <form style={style.form}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              name=\"nombreCompleto\" value = {usuario.nombreCompleto} onChange = {ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese nombre y apellido\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"username\" value = {usuario.username} onChange = {ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese Username\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"email\" value = {usuario.email} onChange = {ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese email\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField \r\n              name=\"password\"  value = {usuario.password} onChange = {ingresarValoresMemoria}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese password\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"confirmarPassword\" value = {usuario.confirmarPassword} onChange = {ingresarValoresMemoria}\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Confirme password\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <ImageUploader\r\n            withIcon={false}\r\n            key= {fotoKey}\r\n            single={true}\r\n            buttonText=\"Seleccione una imagen de perfil\"\r\n            onChange = {subirFoto}\r\n            imgExtension={[\".jpg\", \"gif\",\".png\",\"jpeg\"]}\r\n            maxFileSize={5242880}\r\n            />\r\n\r\n            \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Button\r\n              type=\"submit\" onClick = {guardarUsuario}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              style={style.submit}\r\n            >\r\n              Guardar datos\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PerfilUsuario;"]},"metadata":{},"sourceType":"module"}